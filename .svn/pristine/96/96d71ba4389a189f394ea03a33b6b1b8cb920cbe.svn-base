<!-- title:菜单
   auth:路通
   data:2021-06-30 -->
<template>
	<div class="muen_main">
		<div class="el-tabs-left">
			<div class="el-tabs-left_img  el-tabs_item ">
				<img src="@/assets/logo.png" alt="" style="width:32px;height: 32px;padding: 16px;">
			</div>
		  <template  v-for="(item,meun_index) in $store.state.MenuRoutes">
			<div :key="item.id" class="el-tabs_item" :class="{active : meun_index===this.$store.state.curId}" @click="tab(meun_index,item)" v-if="item.isShow=='0'">
				<div class="el-tabs_item_ct">
					<p><i :class="'fa '+item.icon"></i></p>
					<p style="overflow: hidden;max-height: 18px;max-width: 100%;">{{item.title}}</p>
				</div>
			</div>
		  </template>
		</div>
		<div
			:class="['el-tabs-right',$store.state.collapsed? 'hidden_el-tabs-right_hidden':'hidden_el-tabs-right_show' ]">
			<div class="el-tabs-right_search">
				<div class="el-tabs-right_search_main" style="width: 200px;">
					<p style="font-family: '黑体';font-weight: 600;font-size: 26px;color: #49B144;"> GudXon</p>
				</div>
			</div>
			<el-divider style="width: 200px;">{{left_mune_name}}</el-divider>
		<el-scrollbar height="calc(100vh - 80px)" style="margin-top: 10px;">
			<div class="el-tabs-right_main">
				<el-row class="tac" style="overflow: hidden;">
					<el-col :span="24">
						<el-menu class="el-menu-vertical-demo"
						    ref="menu"
						    :default-active='String(default_active)'
							mode='vertical'>
							 <MenuTree   :MenuTree="menu_list != null && menu_list.length>0?menu_list[menu_curId].children:[]"></MenuTree>
						</el-menu>
					</el-col>
				</el-row>
			  </div>
			</el-scrollbar>
		</div>
	</div>
</template>
<script>
	import MenuTree from '@/components/menu/tree'
	export default {
		components: {
			MenuTree
		},
		data() {
			return {
				search_text: '',
				left_mune_name: '',
				menu_list: this.$store.state.MenuRoutes?this.$store.state.MenuRoutes:[],
				menu_curId:0,
				default_active:this.$store.state.tabsMenu_index,
			}
		},
		mounted() {
			this.storeMenu()
		},
		watch:{
			//不同分类切换
			"$store.state.curId":{
				deep: true,
				handler:function(newValue, oldValue){
					if(newValue != oldValue){
						this.menu_curId=newValue
						this.$nextTick(()=>{
							this.default_active="0"
							let _this=this
							setTimeout(()=>{
								_this.default_active=this.$store.state.tabsMenu_index
							},100)
						})
					}	
				}
			},
			//相同分类切换
			"$store.state.tabsMenu_index":{
				deep: true,
				handler:function(newValue, oldValue){
					if(this.menu_curId==this.$store.state.curId){
						this.default_active=newValue
					}
				}
			}
		},
		methods: {
			tab: function(index, data) {
				this.$store.dispatch("updateCurId", index)
				this.left_mune_name = data.title;
			},
			storeMenu: function() {
				let menuList = []
				try {
					this.menu_list = JSON.parse(localStorage.getItem("menu_list"))?JSON.parse(localStorage.getItem("menu_list")):[];
				} catch (err) {
					this.menu_list = [];
				}
				this.$store.dispatch('changeMenuRoutes', this.menu_list)
				if (this.menu_list.length > 0) {
					this.left_mune_name = this.menu_list[0].title
				}
			}
		},
	}
</script>
<style>
	.muen_main,
	.el-tabs__item,
	.el-tabs-left {
		/* height: 100%; */
		min-height: 100%;
	}

	.muen_main {
		display: flex;
	}

	.el-tabs-left_svg {
		width: 36px;
		height: 36px;
		margin: 12px;
	}

	.vab-icon,
	.el-tabs_item,
	.el-tabs-left_img {
		height: 65px;
		text-align: center;
		/* line-height: 60px; */
	}

	.el-tabs_item_ct i {
		font-size: 20px;
		padding-bottom: 3px;
	}

	.el-tabs_item_ct p {
		color: #fff;
	}

	.el-tabs_item_ct {
		position: relative;
		top: 50%;
		transform: translateY(-50%);
	}

	.el-tabs-left {
		display: fixed;
		bottom: 0;
		top: 0;
		left: 0;
		right: 0;
		width: 65px;
		background: linear-gradient(90deg, #282c34, #000);
	}

	.el-tabs_item {
		color: #fff;
		text-align: center;
		cursor: pointer;
		font-family: "PingFang SC", Arial, "Microsoft YaHei", sans-serif;
		background: linear-gradient(90deg, #282c34, #000);
		font-size: 14px
	}

	.active {
		background: #1890ff;
		transition: all .3s cubic-bezier(.645, .045, .355, 1), border 0s, color .1s, font-size 0s;
	}

	.el-tabs-right {
		width: 200px;
		border-right: 1px solid #ccc;
		background-color: #FFFFFF;
		/* transition: 0.3S; */
		/* transform: 0.3S translate3d(0,0,0); */
		overflow: hidden;
		box-shadow: 10px 10px 5px #888888
			/* transition: all 1s ease; */

	}

	.hidden_el-tabs-right_hidden {
		width: 0px;
		transition: all 0.3s ease;
		overflow: hidden;
	}

	.hidden_el-tabs-right_show {
		width: 200px;
		transition: all 0.3s ease;
		overflow: hidden;
	}

	.el-tabs-right_search {
		height: 59px;
	}

	.el-tabs-right_search_main {
		display: flex;
		text-align: center;
		position: relative;
		background-color: #FFFFFF;
	}

	.el-tabs-right_search_main p {
		margin: 0 auto;
		display: inline-block;
		vertical-align: middle;
		margin-top: 15px;
		font-size: 20px;
		color: #515a6e !important;
		letter-spacing: 2px
			/* margin-top: 17px; */
	}

	.el-divider--horizontal {
		margin: 0;
	}
	a {
		/* display: block; */
		text-decoration: none;
	}

	.el-menu-vertical-demo {
		border-right: 0;
	}
	.MenuTree{
		background-color: red;
	}
</style>
