<template>
	<el-container>
		<el-header>
			<vxe-toolbar ref="SchedulePipeToolbar" custom print export>
				<template #buttons>
					<vxe-button status="primary" @click="searchDate">查询</vxe-button>
					<vxe-button v-has="['add']" @click="add">选择制造令</vxe-button>
					<vxe-button v-has="['edit']" @click="add">修改排程日期</vxe-button>
					<vxe-button v-has="['delete']" @click="del">删除</vxe-button>
				</template>
			</vxe-toolbar>
		</el-header>
		<el-main>
			<vxe-table :data="tableData" highlight-current-row highlight-hover-row height="auto" keep-source
				border="full" :print-config="{}" show-overflow
				:edit-config="{ trigger: 'click', mode: 'cell', showStatus: true, icon: 'fa fa-pencil' }"
				ref="SchedulePipe" :auto-resize="$store.state.autoResize" @edit-closed="editClosedEvent" resizable
				show-footer :checkbox-config="{ checkField: 'checked', trigger: 'row', range: true, highlight: true, }">
				<vxe-column type="checkbox" width="60" align="center"></vxe-column>
				<vxe-column field="produceDate" title="排程日期" width="110px" align="center"></vxe-column>
				<vxe-column field="productNo" title="生产订单号" width="140px"></vxe-column>
				<vxe-column field="productName" title="成品名称" width="200px"></vxe-column>
				<vxe-column field="invCode" title="部件编码" width="120px"></vxe-column>
				<vxe-column field="standard" title="规格" width="90px" align="center"></vxe-column>
				<vxe-column field="type" title="形状" width="70px" align="center"></vxe-column>
				<vxe-column field="length" title="长管管长" width="80px" align="right"></vxe-column>
				<vxe-column field="diameter" title="长管管径" width="80px" align="right"></vxe-column>
				<vxe-column field="thickness" title="长管管厚" width="80px" align="right"></vxe-column>
				<vxe-column field="pitchNumber" title="短管节数" width="80px" align="right"></vxe-column>
				<vxe-column field="shortLength" title="短管长度" width="80px" align="right"></vxe-column>
				<vxe-column field="quantity" title="加工数量(短管)" width="120px" align="right"></vxe-column>
				<vxe-column field="createUser" title="排程人员" width="80px" align="center"></vxe-column>
				<vxe-column field="createTime" title="添加时间" width="180px" align="center"></vxe-column>
			</vxe-table>
		</el-main>
		<el-footer>
			<page ref="page_data" :totalCount="totalCount" @page_list="page_list" />
		</el-footer>
		<add ref='add' @page_list="page_list" />
		<!-- <excel ref='excel' @page_list="page_list" /> -->
		<search ref='search' @SonSearch="SonSearch" />
		<!-- <down-table ref='downTable' /> -->
	</el-container>

</template>
<script>
import page from "@/components/page/page.vue";
import add from "./SchedulePipeAdd.vue";
import search from "./search.vue";
export default {
	name: "SchedulePipe",
	components: {
		page,
		add,
		search,
	},
	data() {
		return {
			search: {},
			totalCount: 0,
			tableData: [],
			select_id: "",
			auto: true,
			footerData: [],
			footerSumName: ['quantity', 'qualifiedQty'], //需要合计的列
		};
	},
	mounted() {
		this.page_list();
	},
	created() {
		this.$nextTick(() => {
			// 手动将表格和工具栏进行关联
			this.$refs.SchedulePipe.connect(this.$refs.SchedulePipeToolbar)
		})
	},
	methods: {
		searchDate: function () {
			this.$refs.search.SelectShow = true;
		},
		SonSearch: function () {
			this.search = this.$refs.search.form;
			this.page_list()
		},
		page_list: function () {
			let pagesize = this.$refs.page_data.page_size;
			let page = this.$refs.page_data.page;
			this.api.production.SchedulePipe.GetList(pagesize, page, this.search).then(res => {
				if (res.data.code == 200) {
					this.tableData = res.data.data.rows;
					this.totalCount = parseInt(res.data.data.totalCount);
					this.$refs.search.SelectShow = false
				} else {
					this.$message.error(res.data.message)
				}

			});
		},
		add: function () {
			this.$refs.add.is_show = !this.$refs.add.is_show;
			// this.$nextTick(() => {
			// 	this.$refs.add.children_page_list();
			// })

		},
		del: function () {
			let data = this.$refs.SchedulePipe.getCheckboxRecords();
			if (data.length < 1) {
				this.$message.error("至少选择一个订单");
				return false
			}
			let ids = [];
			data.forEach((i, v) => {
				ids.push(i.id)
			});
			this.$confirm("此操作将删除改排成, 是否继续?", "提示", {
				confirmButtonText: "确定",
				cancelButtonText: "取消",
				type: "warning"
			}).then(() => {
				this.api.production.SchedulePipe.Delete(ids).then(res => {
					if (res.data.code == 200) {
						this.$message.success(res.data.message);
						this.page_list()
					} else {
						this.$message.error(res.data.message);
					}
				});
			});
		},
		editClosedEvent: function ({ row, column }) {
			const $table = this.$refs.SchedulePipe
			const field = column.property
			let data = { 'id': row.id }
			data[field] = row[field]
			let way
			switch (field) {
				case 'packDate':
					way = 'UpdatePackDate'
					break;
				case 'dueDate':
					way = 'UpdateDueDate'
					break;
			}
			this.api.production.SchedulePipe[way](data).then(res => {
				if (res.data.code == 200) {
					const cellValue = row[field]
					this.$message.success("保存成功")
				} else {
					this.$message.error(res.data.message)
				}
				this.page_list();
			})
		}
	},
};
</script>
<style lang="less" scoped="scoped">
.el-main {
	padding: 0 20px 20px 20px;
}
</style>
