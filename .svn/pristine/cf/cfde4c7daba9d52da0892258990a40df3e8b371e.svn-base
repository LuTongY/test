<template>
	<el-container>
		<el-header>
			<vxe-toolbar ref="ScheduleToolbar" custom print export>
				<template #buttons>
					<vxe-button status="primary" @click="searchDate">查询</vxe-button>
					<vxe-button v-has="['add']" @click="add">新增</vxe-button>
					<vxe-button v-has="['del']" @click="del">删除</vxe-button>
					<vxe-button v-has="['TaskRoute']" @click="TaskRoute">设置工艺路线</vxe-button>
					<!-- <vxe-button v-has="['excel']" @click="excel">excel导入</vxe-button> -->
					<vxe-button v-has="['TaskAdd']" @click="TaskAdd">生成制造令</vxe-button>
					<vxe-button v-has="['TaskDel']" @click="TaskDel">删除制造令</vxe-button>
				</template>
			</vxe-toolbar>
		</el-header>
		<el-main>
			<vxe-table :data="tableData" highlight-current-row highlight-hover-row height="auto" keep-source
				border="full" :print-config="{}" show-overflow
				:edit-config="{ trigger: 'click', mode: 'cell', showStatus: true, icon: 'fa fa-pencil' }" ref="Schedule"
				:auto-resize="$store.state.autoResize" @edit-closed="editClosedEvent" resizable show-footer
				:footer-method="GetfooterData"
				:checkbox-config="{ checkField: 'checked', trigger: 'row', range: true, highlight: true }">
				<vxe-column type="checkbox" width="60" align="center"></vxe-column>
				<vxe-column field="saleOrderNo" title="销售订单号" width="120px"></vxe-column>
				<vxe-column field="saleOrderSeq" title="行号" width="50px" align="center"></vxe-column>
				<vxe-column field="series" title="系列" width="100px" align="center"></vxe-column>
				<vxe-column field="invCode" title="物料编码" width="130px" :visible='false'></vxe-column>
				<vxe-column field="invName" title="物料名称" min-width="250px"></vxe-column>
				<vxe-column field="quantity" title="需求数量" width="100px" align="right"></vxe-column>
				<vxe-column field="qualifiedQty" title="入库数量" width="100px" align="right"></vxe-column>
				<!-- <vxe-column field="plan_qty" title="计划数量" width="120px"></vxe-column> -->
				<vxe-column field="dueDate" title="订单交期" width="150px"></vxe-column>
				<vxe-column field="packDate"
					:edit-render="{ name: '$input', enabled: T.CheckPermissions('UpdatePackDate'), props: { type: 'date', placeholder: '请选择包装日期' } }"
					title="预计包装日期" width="150px"></vxe-column>
				<vxe-column field="salesman" title="业务员" width="100px" :visible='false'></vxe-column>
				<vxe-column field="isStock" title="现货" width="60px"></vxe-column>
				<vxe-column field="createUser" title="创建人" width="80px"></vxe-column>
				<vxe-column field="createTime" title="创建时间" width="180px"></vxe-column>
				<vxe-column field="statusName" title="状态" align="center" fixed="right" width="120px">
					<template #default="{ row }">
						<el-button size='mini' v-if="row.statusName == '未进行'">未进行</el-button>
						<el-button type="primary" size='mini' v-if="row.statusName == '进行中'">进行中</el-button>
						<el-button type="success" size='mini' v-if="row.statusName == '已完成'">已完成</el-button>
						<el-button type="info" size='mini' v-if="row.statusName == '已失效'">已失效</el-button>
					</template>
				</vxe-column>
			</vxe-table>
		</el-main>
		<el-footer>
			<page ref="page_data" :totalCount="totalCount" @page_list="page_list" />
		</el-footer>
		<add ref='add' @page_list="page_list" />
		<!-- <excel ref='excel' @page_list="page_list" /> -->
		<search ref='search' @SonSearch="SonSearch" />
		<!-- <down-table ref='downTable' /> -->
		<task-route ref='taskRoute' @page_list="page_list" />
	</el-container>

</template>
<script>
import page from "@/components/page/page.vue";
import add from "./add.vue";
// import excel from "./excel.vue";
import search from "./search.vue";
// import downTable from "./downTable.vue";
import taskRoute from "./TaskRoute.vue";
export default {
	name: "Schedule",
	components: {
		page,
		add,
		// excel,
		// downTable,
		search,
		taskRoute
	},
	data() {
		return {
			search: {},
			totalCount: 0,
			tableData: [],
			select_id: "",
			auto: true,
			footerData: [],
			footerSumName: ['quantity', 'qualifiedQty'], //需要合计的列
		};
	},
	mounted() {
		this.page_list();
	},
	created() {
		this.$nextTick(() => {
			// 手动将表格和工具栏进行关联
			this.$refs.Schedule.connect(this.$refs.ScheduleToolbar)
		})
	},
	methods: {
		searchDate: function () {
			this.$refs.search.SelectShow = true;
		},
		GetfooterData: function ({ columns, data }) {
			this.footerData = []
			let sumObj = {}
			let arr = []
			for (let i = 0; i < this.footerSumName.length; i++) {
				sumObj[this.footerSumName[i]] = 0;
			}
			data.forEach((item, index) => {
				for (let obj in sumObj) {
					if (!isNaN(item[obj]) && item.hasOwnProperty(obj)) {
						sumObj[obj] += parseInt(item[obj])
					}
				}
			})
			columns.forEach((item, index) => {
				if (index == 0) { arr.push('合计') }
				else if (this.footerSumName.indexOf(item.property) > -1) {
					arr.push(sumObj[item.property])
				}
				else { arr.push("-") }
			})
			this.footerData.push(arr)
			return this.footerData
		},
		SonSearch: function () {
			this.search = this.$refs.search.form;
			this.page_list()
		},
		page_list: function () {
			let pagesize = this.$refs.page_data.page_size;
			let page = this.$refs.page_data.page;
			this.api.production.Schedule.GetList(pagesize, page, this.search).then(res => {
				if (res.data.code == 200) {
					this.tableData = res.data.data.rows;
					this.totalCount = parseInt(res.data.data.totalCount);
					this.$refs.search.SelectShow = false
				} else {
					this.$message.error(res.data.message)
				}

			});
		},
		add: function () {
			this.$refs.add.is_show = !this.$refs.add.is_show;
			this.$nextTick(() => {
				this.$refs.add.children_page_list();
			})

		},
		del: function () {
			let data = this.$refs.Schedule.getCheckboxRecords();
			if (data.length < 1) {
				this.$message.error("至少选择一个订单");
				return false
			}
			let ids = [];
			data.forEach((i, v) => {
				ids.push(i.id)
			});
			this.$confirm("此操作将删除改排成, 是否继续?", "提示", {
				confirmButtonText: "确定",
				cancelButtonText: "取消",
				type: "warning"
			}).then(() => {
				this.api.production.Schedule.Delete(ids).then(res => {
					if (res.data.code == 200) {
						this.$message.success(res.data.message);
						this.page_list()
					} else {
						this.$message.error(res.data.message);
					}
				});
			});
		},
		// excel: function() {
		// 	this.$refs.excel.is_show = !this.$refs.excel.is_show;
		// },
		editClosedEvent: function ({ row, column }) {
			const $table = this.$refs.Schedule
			const field = column.property
			let data = { 'id': row.id }
			data[field] = row[field]
			let way
			switch (field) {
				case 'packDate':
					way = 'UpdatePackDate'
					break;
				case 'dueDate':
					way = 'UpdateDueDate'
					break;
			}
			this.api.production.Schedule[way](data).then(res => {
				if (res.data.code == 200) {
					const cellValue = row[field]
					this.$message.success("保存成功")
				} else {
					this.$message.error(res.data.message)
				}
				this.page_list();
			})
		},
		TaskAdd: function () {
			let data = this.$refs.Schedule.getCheckboxRecords();
			if (data.length < 1) { this.$message.error("至少选择一个订单"); return false }
			let ids = [];
			data.forEach((i, v) => { ids.push(i.id) });
			this.$confirm("此操作将生成制造令, 是否继续?", "提示", {
				confirmButtonText: "确定",
				cancelButtonText: "取消",
				type: "warning"
			}).then(() => {
				ids.forEach(item => {
					this.api.production.plan.TaskAdd(item).then(res => {
						if (res.data.code == 200) {
							this.page_list();
							this.$message.success(res.data.message);
						} else {
							this.$message.error(res.data.data.errors.id);
						}
					});
				})

			});
		},
		TaskDel: function () {
			let data = this.$refs.Schedule.getCheckboxRecords();
			if (data.length < 1) {
				this.$message.error("至少选择一个订单");
				return false
			}
			let ids = [];
			data.forEach((i, v) => {
				ids.push(i.id)
			});
			this.$confirm("此操作将删除制造令, 是否继续?", "提示", {
				confirmButtonText: "确定",
				cancelButtonText: "取消",
				type: "warning"
			}).then(() => {
				this.api.production.plan.TaskDel(ids).then(res => {
					if (res.data.code == 200) {
						this.$message.success(res.data.message);
						this.page_list()
					} else {
						this.$message.error(res.data.message);
					}
				});
			});
		},
		TaskRoute: function () {
			let data = this.$refs.Schedule.getCheckboxRecords();
			if (data.length != 1) {
				this.$message.error("请选择一条数据");
				return false
			}
			this.$refs.taskRoute.scheduleId = data[0].id;
			this.$refs.taskRoute.children_page_list();
		}
	},
};
</script>
<style lang="less" scoped="scoped">
.el-main {
	padding: 0 20px 20px 20px;
}
</style>
